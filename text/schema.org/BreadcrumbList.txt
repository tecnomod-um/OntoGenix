




BreadcrumbList - Schema.org Type



























Schema.org









Docs


Schemas


Validate


About



 








Note: you are viewing the development
    version of Schema.org.
    See How we work for more details.
  







BreadcrumbList
A Schema.org Type





Thing 
            
                
                         > 
                    
				
            
					
    
    
    Intangible 
            
                
                         > 
                    
				
            
					
    
    
    ItemList 
            
                
                        
                    
				 > 
            
					
    
    
    BreadcrumbList





[more...]


 Canonical URL: https://schema.org/BreadcrumbList 

Check for open issues.




A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.

The position property is used to reconstruct the order of the items in a BreadcrumbList. The convention is that a breadcrumb list has an itemListOrder of ItemListOrderAscending (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
 





PropertyExpected TypeDescription



Properties from 
    
    
    ItemList

itemListElement

ListItem  or 
Text  or 
Thing
For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.

Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.

Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
                
                
                
            


itemListOrder

ItemListOrderType  or 
Text
Type of ordering (e.g. Ascending, Descending, Unordered).
                
                
                
            


numberOfItems

Integer
The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
                
                
                
            



Properties from 
    
    
    Thing

additionalType

Text  or 
URL
An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
    use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org style guide.
                
                
                
            


alternateName

Text
An alias for the item.
                
                
                
            


description

Text  or 
TextObject
A description of the item.
                
                
                
            


disambiguatingDescription

Text
A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
                
                
                
            


identifier

PropertyValue  or 
Text  or 
URL
The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.
                
                
                
            


image

ImageObject  or 
URL
An image of the item. This can be a URL or a fully described ImageObject.
                
                
                
            


mainEntityOfPage

CreativeWork  or 
URL
Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details.
                
                
                Inverse property: 
    
    
    mainEntity



name

Text
The name of the item.
                
                
                
            


potentialAction

Action
Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
                
                
                
            


sameAs

URL
URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
                
                
                
            


subjectOf

CreativeWork  or 
Event
A CreativeWork or Event about this Thing.
                
                
                Inverse property: 
    
    
    about



url

URL
URL of the item.
                
                
                
            



Instances of 
    
    
    BreadcrumbList  may appear as a value for the following properties

PropertyOn TypesDescription

breadcrumb

WebPage
A set of links that can help a user understand and navigate a website hierarchy.
  








Examples

Example 1 



Copied




No Markup
Microdata
RDFa
JSON-LD
Structure


Example notes or example HTML without markup.

<ol>
  <li>
    <a href="https://example.com/dresses">Dresses</a>
  </li>
  <li>
    <a href="https://example.com/dresses/real">Real Dresses</a>
  </li>
</ol>



Example encoded as Microdata embedded in HTML.

<ol itemscope itemtype="https://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope
      itemtype="https://schema.org/ListItem">
    <a itemprop="item" href="https://example.com/dresses">
    <span itemprop="name">Dresses</span></a>
    <meta itemprop="position" content="1" />
  </li>
  <li itemprop="itemListElement" itemscope
      itemtype="https://schema.org/ListItem">
    <a itemprop="item" href="https://example.com/dresses/real">
    <span itemprop="name">Real Dresses</span></a>
    <meta itemprop="position" content="2" />
  </li>
</ol>



Example encoded as RDFa embedded in HTML.

<ol vocab="https://schema.org/" typeof="BreadcrumbList">
  <li property="itemListElement" typeof="ListItem">
    <a property="item" typeof="WebPage" href="https://example.com/dresses">
     <span property="name">Dresses</span></a>
     <meta property="position" content="1">
  </li>
  <li property="itemListElement" typeof="ListItem">
    <a property="item" typeof="WebPage" href="https://example.com/dresses/real">
    <span property="name">Real Dresses</span></a>
    <meta property="position" content="2">
  </li>
</ol>



Example encoded as JSON-LD in a HTML script tag.

<script type="application/ld+json">
{
 "@context": "https://schema.org",
 "@type": "BreadcrumbList",
 "itemListElement":
 [
  {
   "@type": "ListItem",
   "position": 1,
   "item":
   {
    "@id": "https://example.com/dresses",
    "name": "Dresses"
    }
  },
  {
   "@type": "ListItem",
  "position": 2,
  "item":
   {
     "@id": "https://example.com/dresses/real",
     "name": "Real Dresses"
   }
  }
 ]
}
</script>



Structured representation of the JSON-LD example.
 


{
 "@context": "https://schema.org",
 "@type": "BreadcrumbList",
 "itemListElement":
 [
  {
   "@type": "ListItem",
   "position": 1,
   "item":
   {
    "@id": "https://example.com/dresses",
    "name": "Dresses"
    }
  },
  {
   "@type": "ListItem",
  "position": 2,
  "item":
   {
     "@id": "https://example.com/dresses/real",
     "name": "Real Dresses"
   }
  }
 ]
}


 



          V23.0
          2023-10-17
      
Terms and conditions





