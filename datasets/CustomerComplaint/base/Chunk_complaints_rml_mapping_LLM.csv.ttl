@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix um: <https://vocab.um.es#>.
@prefix schema: <http://schema.org/>.

<#TriplesMapComplaint> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Complaint/{FAIR_URI}";
        rr:class schema:CreativeWork
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasResponse;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapResponse>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasProduct;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapProduct>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasIssue;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapIssue>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:filedIn;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapLocation>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:submittedThrough;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapSubmission>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasCompany;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapCompany>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:uniqueIdentifier;
        rr:objectMap [
            rr:column "FAIR_URI";
            rr:datatype xsd:anyURI
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:dateReceived;
        rr:objectMap [
            rr:column "Date received";
            rr:datatype xsd:date
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:complaintNarrative;
        rr:objectMap [
            rr:column "Consumer complaint narrative";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:complaintID;
        rr:objectMap [
            rr:column "Complaint ID";
            rr:datatype xsd:integer
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:tag;
        rr:objectMap [
            rr:column "Tags";
            rr:datatype xsd:string
        ];
    ].

<#TriplesMapCompany> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Company/{Company}{FAIR_URI}";
        rr:class schema:Organization
    ];
    rr:predicateObjectMap [
        rr:predicate um:companyName;
        rr:objectMap [
            rr:column "Company";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:dateSentToCompany;
        rr:objectMap [
            rr:column "Date sent to company";
            rr:datatype xsd:date
        ];
    ].

<#TriplesMapConsumer> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Consumer/{Consumer complaint narrative}{FAIR_URI}";
        rr:class schema:Person
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerConsent;
        rr:objectMap [
            rr:column "Consumer consent provided?";
            rr:datatype xsd:boolean
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerDisputed;
        rr:objectMap [
            rr:column "Consumer disputed?";
            rr:datatype xsd:boolean
        ];
    ].

<#TriplesMapProduct> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Product/{Product}{FAIR_URI}";
        rr:class schema:Product
    ];
    rr:predicateObjectMap [
        rr:predicate um:productType;
        rr:objectMap [
            rr:column "Product";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:subProductType;
        rr:objectMap [
            rr:column "Sub-product";
            rr:datatype xsd:string
        ];
    ].

<#TriplesMapIssue> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Issue/{Issue}{FAIR_URI}";
        rr:class schema:Thing
    ];
    rr:predicateObjectMap [
        rr:predicate um:issueDescription;
        rr:objectMap [
            rr:column "Issue";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:subIssueDescription;
        rr:objectMap [
            rr:column "Sub-issue";
            rr:datatype xsd:string
        ];
    ].

<#TriplesMapResponse> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Response/{Company response to consumer}{FAIR_URI}";
        rr:class schema:Thing
    ];
    rr:predicateObjectMap [
        rr:predicate um:publicResponse;
        rr:objectMap [
            rr:column "Company public response";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerResponse;
        rr:objectMap [
            rr:column "Company response to consumer";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:timelyResponse;
        rr:objectMap [
            rr:column "Timely response?";
            rr:datatype xsd:boolean
        ];
    ].

<#TriplesMapSubmission> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Submission/{Submitted via}{FAIR_URI}";
        rr:class schema:Thing
    ];
    rr:predicateObjectMap [
        rr:predicate um:submissionMethod;
        rr:objectMap [
            rr:column "Submitted via";
            rr:datatype xsd:string
        ];
    ].

<#TriplesMapLocation> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es#Location/{State}{FAIR_URI}";
        rr:class schema:Place
    ];
    rr:predicateObjectMap [
        rr:predicate um:state;
        rr:objectMap [
            rr:column "State";
            rr:datatype xsd:string
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:zipCode;
        rr:objectMap [
            rr:column "ZIP code";
            rr:datatype xsd:string
        ];
    ].
