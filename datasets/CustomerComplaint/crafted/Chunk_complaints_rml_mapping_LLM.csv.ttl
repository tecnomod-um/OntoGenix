@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix um: <https://vocab.um.es#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .

<#TriplesMapCustomerComplaint> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/CustomerComplaint/{FAIR_URI}";
        rr:class um:CustomerComplaint
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerComplaintNarrative;
        rr:objectMap [ rr:column "Consumer complaint narrative"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerConsentProvided;
        rr:objectMap [ rr:column "Consumer consent provided?"; rr:datatype xsd:boolean ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:consumerDisputed;
        rr:objectMap [ rr:column "Consumer disputed?"; rr:datatype xsd:boolean ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:dateReceived;
        rr:objectMap [ rr:column "Date received"; rr:datatype xsd:date ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:dateSentToCompany;
        rr:objectMap [ rr:column "Date sent to company"; rr:datatype xsd:date ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:fairURI;
        rr:objectMap [ rr:column "FAIR_URI"; rr:datatype xsd:anyURI ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:submittedVia;
        rr:objectMap [ rr:column "Submitted via"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:tags;
        rr:objectMap [ rr:column "Tags"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:timelyResponse;
        rr:objectMap [ rr:column "Timely response?"; rr:datatype xsd:boolean ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:complaintID;
        rr:objectMap [ rr:column "Complaint ID"; rr:datatype xsd:integer ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasState;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapState>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasProduct;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapProduct>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasProblemOfComplaint;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapProblemOfComplaint>;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasCompany;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapCompany>;
        ];
    ].

<#TriplesMapState> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/State/{State}{FAIR_URI}";
        rr:class um:State
    ];
    rr:predicateObjectMap [
        rr:predicate um:stateName;
        rr:objectMap [ rr:column "State"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:zipCode;
        rr:objectMap [ rr:column "ZIP code"; rr:datatype xsd:integer ]
    ].

<#TriplesMapProduct> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/Product/{Product}{FAIR_URI}";
        rr:class um:Product
    ];
    rr:predicateObjectMap [
        rr:predicate um:productType;
        rr:objectMap [ rr:column "Product"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasSubProduct;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapSubProduct>;
        ];
    ].

<#TriplesMapProblemOfComplaint> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/ProblemOfComplaint/{Issue}{FAIR_URI}";
        rr:class um:ProblemOfComplaint
    ];
    rr:predicateObjectMap [
        rr:predicate um:issue;
        rr:objectMap [ rr:column "Issue"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasProblemSubCategory;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapProblemSubCategory>;
        ];
    ].

<#TriplesMapCompany> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/Company/{Company}{FAIR_URI}";
        rr:class um:Company
    ];
    rr:predicateObjectMap [
        rr:predicate um:companyName;
        rr:objectMap [ rr:column "Company"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasCompanyResponse;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapCompanyResponse>;
        ];
    ].

<#TriplesMapCompanyResponse> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/CompanyResponse/{Company public response}{FAIR_URI}";
        rr:class um:CompanyResponse
    ];
    rr:predicateObjectMap [
        rr:predicate um:companyPublicResponse;
        rr:objectMap [ rr:column "Company public response"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:companyResponseToConsumer;
        rr:objectMap [ rr:column "Company response to consumer"; rr:datatype xsd:string ]
    ];
    rr:predicateObjectMap [
        rr:predicate um:hasResolution;
        rr:objectMap [
            rr:parentTriplesMap <#TriplesMapResolution>;
        ];
    ].

<#TriplesMapResolution> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/Resolution/{Consumer disputed?}{FAIR_URI}";
        rr:class um:Resolution
    ].

<#TriplesMapProblemSubCategory> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/ProblemSubCategory/{Sub-issue}{FAIR_URI}";
        rr:class um:ProblemSubCategory
    ];
    rr:predicateObjectMap [
        rr:predicate um:subIssue;
        rr:objectMap [ rr:column "Sub-issue"; rr:datatype xsd:string ]
    ].

<#TriplesMapSubProduct> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "Chunk_complaints.csv";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://vocab.um.es/SubProduct/{Sub-product}{FAIR_URI}";
        rr:class um:SubProduct
    ];
    rr:predicateObjectMap [
        rr:predicate um:subProductType;
        rr:objectMap [ rr:column "Sub-product"; rr:datatype xsd:string ]
    ].
