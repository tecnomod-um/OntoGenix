"""
I need you to help me write a plan. I will give you your current memory
(a brief summary of previous planned tasks), you should use it to store the key content of what has been planned
so that you can keep track of very long context, the previously written plan, and instructions on what to plan
in the next step.

I need you to write:

    1. Output Tasks: The generated plan must follow the input instructions and be strict to the output defined with the
    following format:

    START
        task_1:
            step_name: <name of task 1>
            step_description: <Definition of task 1>
        task_2:
            step_name: <name of task 2>
            step_description: <Definition of task 2>
        ...
        task_N:
            step_name: <name of task N>
            step_description: <Definition of task N>
    END

    2. Output Memory: The updated memory. You should first explain which preferences in the input memory are no
    longer necessary and why, and then explain what needs to be added into the memory and why. After that you
    should write the updated memory. The updated memory should be similar to the input memory except the parts
    you previously thought that should be deleted or added. The updated memory should only store key information.
    The updated memory should never exceed 20 sentences!

    3. Output Instruction:  Instructions for the next task in the plan to be followed (after what you have already planned).
    You should output 3 different instructions, each is a possible interesting continuation of the plan.
    Each output instruction should contain 1 sentence.


Here are the inputs:

    Input Plan:
    {input_plan}

    Input Instruction:
    {input_instruction}

    Input Short Term Memory:
    {short_term_memory}

    Input Long Term Memory:
    {long_term_memory}

Now start writing, organize your output by strictly following the output format as below:
    Output Tasks:
        START
            task_1:
                step_name: <name of task 1>
                step_description: <Definition of task 1>
            task_2:
                step_name: <name of task 2>
                step_description: <Definition of task 2>
            ...
            task_N:
                step_name: <name of task N>
                step_description: <Definition of task N>
        END

    Output Memory:
    Rational: <string that explain how to update the memory>;
    Updated Memory: <string of updated memory>, around 10 to 20 sentences

    Output Instructions:
    Instruction 1: <content for instruction 1>, do not write more than 1 sentence.
    Instruction 2: <content for instruction 2>, do not write more than 1 sentence.
    Instruction 3: <content for instruction 3>, do not write more than 1 sentence.
    Finish Statement: <write "FINISH" to indicate the end of the output>

Very important:
The updated memory should only store key information.
The updated memory should never contain over 500 words!
Write like a powerful python-programmer that provides a pseudo-code procedure for the userâ€™s task
and do not move too fast when writing the output instructions for the next plan.
You should first explain which sentences in the input memory are no longer necessary and why, and then
explain what needs to be added into the memory and why. After that, you start rewrite the input memory
to get the updated memory.
Do not generate code.
Do not solve the task.
Do not forget to write Finish Statement: FINISH at the end of your response.
"""